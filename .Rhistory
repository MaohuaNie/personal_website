install.packages("pandoc")
knitr::opts_chunk$set(echo = FALSE)
# Learn more about creating websites with Distill at:
# https://rstudio.github.io/distill/website.html
# Learn more about publishing to GitHub Pages at:
# https://rstudio.github.io/distill/publish_website.html#github-pages
bib_file <- "Exported Items.bib"
csl_file <- "apa.csl"
bib_command <- paste("pandoc", bib_file,
"--csl", csl_file,
"--filter pandoc-citeproc",
"-t html")
bib_output <- system(bib_command, intern = TRUE)
library(pandoc)
bib_file <- "Exported Items.bib"
csl_file <- "apa.csl"
bib_command <- paste("pandoc", bib_file,
"--csl", csl_file,
"--filter pandoc-citeproc",
"-t html")
bib_output <- system(bib_command, intern = TRUE)
bib_file <- "Exported Items.bib"
csl_file <- "apa.csl"
bib_command <- paste("pandoc", bib_file,
"--csl", csl_file,
"--filter pandoc-citeproc",
"-t html")
bib_output <- system(bib_command, intern = TRUE)
cat(bib_output, sep = "\n")
bib_file <- "Exported_Items.bib"
csl_file <- "apa.csl"
bib_command <- paste("pandoc", bib_file,
"--csl", csl_file,
"--filter pandoc-citeproc",
"-t html")
bib_output <- system(bib_command, intern = TRUE)
cat(bib_output, sep = "\n")
bib_file <- "Exported_Items.bib"
csl_file <- "apa.csl"
# Ensure the input file is a Markdown file that references the bibliography
bib_command <- paste("echo '' | pandoc -",
"--citeproc",
"--bibliography", bib_file,
"--csl", csl_file,
"-t html")
bib_output <- system(bib_command, intern = TRUE)
cat(bib_output, sep = "\n")
bib_file <- "Exported Items.bib"
csl_file <- "apa.csl"
# Create a temporary Markdown file with a citation command
bib_content <- "[@dummy]"
writeLines(bib_content, "temp.md")
bib_command <- paste("pandoc temp.md",
"--citeproc",
"--bibliography", bib_file,
"--csl", csl_file,
"-t html")
bib_output <- system(bib_command, intern = TRUE)
cat(bib_output, sep = "\n")
unlink("temp.md")  # Clean up the temporary file
install.packages("RefManageR")
library(RefManageR)
```{r, echo=FALSE, results='asis'}
library(RefManageR)
bib <- ReadBib("Exported_Items.bib")
entry <- GetBibEntry(bib, key = "vehtari_practical_2017")
bib <- ReadBib("Exported_Items.bib")
entry <- bib["vehtari_practical_2017"]
print(entry, style = "html")
bib <- ReadBib("Exported_Items.bib")
entry <- bib["vehtari_practical_2017"]
print(entry, .opts=list(style = "text"))
bib <- ReadBib("Exported_Items.bib")
entry <- bib["vehtari_practical_2017"]
print(entry, .opts = list(bib.style = "numeric", style = "text", .include = c("visited.on" = FALSE)), .brackets = NULL)
bib <- ReadBib("Exported_Items.bib")
entry <- bib["vehtari_practical_2017"]
print(entry, .opts = list(bib.style = "numeric", style = "text", .include = c("visited.on" = FALSE)), .brackets = NULL)
?BibOptions
bib <- ReadBib("Exported_Items.bib")
entry <- bib["vehtari_practical_2017"]
print(entry, .opts = list(bib.style = "numeric", style = "text", .include = c("visited.on" = FALSE)), .brackets = NULL)
bib <- ReadBib("Exported_Items.bib")
entry <- bib["vehtari_practical_2017"]
# Convert the entry to a text string
entry_text <- toBiblatex(entry)
# Remove the index [1] and any unwanted parts manually
entry_text <- gsub("\\[1\\]", "", entry_text)  # Remove the index [1]
entry_text <- gsub("\\(visited on [^)]+\\)", "", entry_text)  # Remove the visited on text
# Print the modified entry
cat(entry_text)
bib <- ReadBib("Exported_Items.bib")
entry <- bib["vehtari_practical_2017"]
print(entry)
entry_text <- entry
# Remove the index [1] and any unwanted parts manually
entry_text <- gsub("\\[1\\]", "", entry_text)  # Remove the index [1]
entry_text <- gsub("\\(visited on [^)]+\\)", "", entry_text)  # Remove the visited on text
# Print the modified entry
cat(entry_text)
install.packages('knitcitations')
# Load required package
library(knitcitations)
# Clear any previous bibliography data
bib <- new_bib()
# Load required package
library(knitcitations)
# Cite the paper, this adds it to the bibliography database
citep("vehtari_practical_2017")
install.packages("postcards")
knitr::opts_chunk$set(echo = FALSE)
library(postcards)
knitr::opts_chunk$set(echo = FALSE)
library(postcards)
knitr::opts_chunk$set(echo = FALSE)
library(postcards)
rmarkdown::pandoc_version()
knitr::opts_chunk$set(echo = FALSE)
library(postcards)
rmarkdown::pandoc_version()
log(1+exp(1.2))
log(1+exp(1.1))
distill::create_theme(name = "theme")
